timezone						= Europe/Moscow
primary_hostname					= mail.domain.ru


domainlist local_domains				= domain.ru
domainlist relay_for_domains				= !* 

hostlist relay_from_hosts				= localhost:127.0.0.1/8

# auth_advertise_hosts					= *

daemon_smtp_port					= 25 : 2525

acl_smtp_connect					= acl_check_connect
# acl_smtp_auth						= acl_check_auth
acl_smtp_helo						= acl_check_helo
acl_smtp_mail						= acl_mail_from
acl_smtp_rcpt						= acl_check_rcpt
acl_smtp_data						= acl_check_data
# acl_smtp_mime						= acl_check_mime



# понадобится когда включу сканирование писем через ClamAV
#av_scanner						= clamd:/var/run/clamav/clamd.sock

# Имя домена добавляемое для локальных отправителей (реальных юзеров системы) т.е. почта отправляемая от root, будет от root@домен_указанный_здесь.
qualify_domain						= domain.ru

# Имя хоста для ситуации, обратной предыдущей, - это имя домена добавляемое к почте для системных юзеров, ну и вообще для почты пришедшей на адрес типа `root`
# будет для root@домен_указанный_здесь. 
qualify_recipient					= domain.ru

# А это как раз кусок вышеописанного анахронизма - про почту в виде user@[222.222.222.222] - принимать её или нет. По дефолту
# (когда строка закомментирована) значение - false. Если захотите поставить true то надо будет добавить в список доменов комбинацию @[] - она означает `все локальные адреса`
allow_domain_literals			= false

# Пользователь от которого работает exim и группа в которой работает exim
exim_user						= Debian-exim
exim_group						= Debian-exim


# запрещаем работу доставки под юзером root - в целях безопасности
never_users						= root:daemon:bin:sync

# тут перечисляются пользователи которым можно отправлять почту используя коммандную строку с опицией -f (пользователи root и от которого работает exim добавляются автоматически)
trusted_users						= www-data

# все что ниже отвечает за отправку из коммандной строки, будут траблы буду разбираться
# no_local_from_check					= 1
# local_from_check					= false
no_local_from_check
untrusted_set_sender					= *

# Проверяем соответствие прямой и обратной зон для всех хостов. Тока зачем это нужно - даже и незнаю... Спам на этом не режется...
# пусть проверяет для всех, потом сам в ACL разрулю значения $sender_host_name и $host_lookup_failed
host_lookup						= !*


# долгая история, но это лучше отключить
# rfc1413_hosts						= *
rfc1413_query_timeout					= 0s

# вот это в свое время написал, потом закоментил, а сейчас не могу в документации найти, поэтому пока оставляю закоментированным
# sender_unqualified_hosts				= localhost:127.0.0.1/8
# recipient_unqualified_hosts				= localhost:127.0.0.1/8

# Интересный пункт, тока я не вполне понимаю зачем он нужен. Позволяет выполнять что-то типа - пришло сообщение на локальный ящик user%test.su@lissyara.su и
# переправляет его на user@test.su. Делается это для перечисленного списка доменов (* - все):
# нафиг запрещаем
# percent_hack_domains					= *

# Если сообщение было недоставлено, то генерится соощение об ошибке. Если сообщение об ошибке не удалось доставить то оно замораживается на указанный в этом пункте срок,
# после чего снова попытка доставить его. При очередной неудаче - сообщение удаляется.
ignore_bounce_errors_after				= 30m

# Замороженные сообщения, находящиеся в очереди, дольше указанного времени удаляются и генерится сообщение об ошибке (при условии, что это не было недоставленное
# сообщение об ошибке :))
timeout_frozen_after					= 3d

# список адресов, через запятую, на которые засылаются сообщения о замороженных сообщениях (о замороженых уведомлениях о заморозке, сообщения не генерятся. - я
# надеюсь эта строка понятна :))
freeze_tell						= tech@domain.ru

# Через какое время повторять попытку доставки замороженного сообщения
auto_thaw						= 1h


# Список хостов, почта от которых принимается, несмотря на ошибки в HELO/EHLO
# все. т.к. данный smtp могут использовать только auth пользователи и определенный списко ip адресов
helo_accept_junk_hosts					= *

# тут можно принудительно указать от каких хостов соединение надо отклонить, у меня таких нет поэтому так
host_reject_connection					= !*


# Приветствие сервера
smtp_banner						= "Smtp server. What are you doing here?"

# Максимальное число одновременных подключений по SMTP. Рассчитывать надо исходя из нагрузки на сервер
smtp_accept_max						= 30

# максимальное число сообщений принимаемое за одно соединение от удалённого сервера (или пользователя). C числом 25
# я имел проблемы тока один раз - когда у меня три дня лежал инет и после его подъёма попёрли мессаги. Но у меня не так
# много почты - всего 30 пользователей.
smtp_accept_max_per_connection				= 25

# максимальный размер очереди соединений, которые не могут быть обслуженый из-за ограничения smtp_accept_max
smtp_connect_backlog					= 50

# максимальное число коннектов с одного хоста
smtp_accept_max_per_host				= 20

# Указываем расположение директория `spool`
spool_directory						= /var/spool/exim

# Ход ладьёй - для увеличения производительности, директория `spool` внутри, разбивается на директории - это ускоряет обработку
split_spool_directory					= true

# Если у сообщения много адресатов на удалённых хостах, то запускатеся до указанного числа максимально число параллельных процессов доставки
remote_max_parallel					= 15

# при генерации сообщения об ошибке прикладывать не всё сообщение, а кусок (от начала) указанного
# размера (иногда полезно и целиком - в таком случае просто закомментируйте эту строку)
return_size_limit					= 300k

#Эта опция может использоваться, чтобы изменить содержание строки заголовка From: в возвратах и других автоматически произведенных сообщениях (Delivery Status Notifications, отсюда имя опции).
dsn_from						= Mail Delivery System <Mailer-Daemon@domain.ru>

# размер сообщения. У меня стоит относительно большой размер (`относительно` - потому, что на большинстве хостов оно ограничено 2-5-10мб, либо стоит анлим.)
message_size_limit					= 200M

# разрешаем неположенные символы в HELO (столкнулся с этим случайно - имя фирмы состояло из двух слов и какой-то раздолбай домен обозвал my_firme_name
# прям с подчёркиваниями... Виндовые клиенты при соединении радостно рапортовали о себе `vasya.my_firme_name` ну а экзим их футболил :))
helo_allow_chars					= _

# Принудительная синхронизация. Если отправитель торопится подавать команды, не дождавшись ответа, то он посылается далеко и надолго :) Немного, спам режется.
smtp_enforce_sync					= true


# Выбираем, что мы будем логировать
# + - писать в логи,
# - - Не писать в логи.
# +all_parents - все входящие?
# +connection_reject - разорваные соединения
# +incoming_interface - интерфейс (реально - IP)
# +lost_incoming_connections - потеряные входящие
# соединения
# +received_sender - отправитель
# +received_recipients - получатель
# +smtp_confirmation - подтверждения SMTP?
# +smtp_syntax_error - ошибки синтаксиса SMTP
# +smtp_protocol_error - ошибки протокола SMTP
# -queue_run - работа очереди (замороженные мессаги)
log_selector = \
	+all_parents \
	+arguments \
	+connection_reject \
	+incoming_interface \
	+delay_delivery \
	+lost_incoming_connection \
	+received_sender \
	+received_recipients \
	+smtp_confirmation \
	+smtp_syntax_error \
	+smtp_protocol_error \
	+queue_run \
	+dnslist_defer
	
# если логиниться через сислог, то надо убирать временную метку, т.к. ее ставит сам сислог, но у нас лог свой, поэтому закоментил
# syslog_timestamp					= no

# собственно наш лог
# log_file_path						= /var/log/exim4/%s-%D.log
log_file_path						= /var/log/exim4/%s.log


headers_charset						= "UTF-8"




### конфигурация ACL для входящей почты
begin acl



	# данное правило обрабатывается на момент открытия соединения
	#
	acl_check_connect:
	
	
		# Запишем кто открывает соединение
		#
		warn
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) opening connection

				
		# Если запрос от нашего сервера, то все дальнейшие ACL пропускаем
		#
		accept
			hosts			= +relay_from_hosts
			set acl_c4		= ok
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) our server (RCPT TO) 
			

		# Проверяем IP соединения, если 127.... или 192.... то dns lookup - пропускаем
		# 
		accept
			condition		= ${if match{$sender_host_address} {\N^(127|192)\.[0-9\.]+$\N}{true}{false}}
			set acl_c4		= ok
			logwrite		= DNSbl lookup and reverse DNS lookup skiped.


		# далее accept connection
		#
		accept

  


	# Проверяем EHLO/HELO
	#
	acl_check_helo:
  
  
  		# Бывает так что нормальные EHLO/HELO тут рубятся (или наоборот пропускаются), поэтому на всякий случай запишем в лог, чтобы, если что потом добавить сюда правило 
		#
		warn
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) => $smtp_command

	
		# Для тех кто в "белом" списке все дальнейшие проверки в данном ACL пропускаем
		#
		accept
			condition		= ${if def:acl_c4 {true}{false}}
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) acl_check_helo skiped because in local white list

	
		# все остальное accept
		#
		accept



	
	# ACL проверки значения в MAIL FROM
	#
	acl_mail_from:

  
		# Запишем в лог MAIL FROM комманду
		#
		warn
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) => $smtp_command


		# Для тех кто в "белом" списке все дальнейшие проверки в данном ACL пропускаем
		#
		accept
			condition		= ${if def:acl_c4 {true}{false}}
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) acl_mail_from skiped because in local white list


                # Для тех кто авторизировался все дальнейшие проверки в данном ACL пропускаем
                # P.S. команда AUTH проходит после EHLO/HELO и до MAIL FROM
                #
                accept
                        authenticated		= *
                        logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) authenticated (MAIL FROM)


		# Все остальные 
		#
		deny
			message			= This SMTP server accept only authenticated connetions
			



	# ACL проверки RCPT TO команды
	#
	acl_check_rcpt:
	
	
		# Запишем в лог RCPT TO команду
		#
		warn
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) => $smtp_command


		# Если в адресе получателя есть некорректные символы то отложенный deny
		#
		deny
			condition		= ${if match{$local_part} {[\|\*\@\%\!\/]+} {true}{false} }
			message                 = Incorrect symbol in address
			logwrite		= Fucked spamers: WRONG_RCPT_TO $sender_host_address (${if def:sender_host_name {$sender_host_name}}) incorrect symbol in address


		# При отправке от postmaster@* количество получателей не должно быть больше 1
		#
		deny
			message			= Message from $sender_address are never sent to more than one recipient
			sender_domains		= !+local_domains
			senders			= : postmaster@*
			condition = ${if >{$recipients_count}{0}}


		# Если сторонним доменам, то accept
		#
		accept
			domains = !+local_domains
			logwrite = Accepted for ${local_part}@${domain} from $sender_host_address (${if def:sender_host_name {$sender_host_name}}) will goto upstream 


			
			
		# Все остальное deny 
		#
		deny
			message			= Recepient not found
			logwrite		= Fucked spamers: WRONG_RCPT_TO $sender_host_address (${if def:sender_host_name {$sender_host_name}}) recepient ${local_part}@${domain} not found




	# ACL проверки DATA (после комманды DATA)
	#
	acl_check_data:
	
	
		
		# Если Message-ID не установлен, то для писем с наших хостов выдадим его в ответ smtp клиенту
		#
		warn
			condition		= ${if !def:h_Message-ID: {true}{false}}
			message			= Message-ID: <E$message_id@$primary_hostname>
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) <= Message-ID: <E$message_id@$primary_hostname>


		# Warn unless there is a verifiable sender address in at least
		# one of the "Sender:", "Reply-To:", or "From:" header lines.
		#
		warn
			!verify			= header_sender
			add_header		= X-Sender-Verify-Failed: No valid sender in message header
			add_header		= From: $sender_address
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) no valid sender in message header, force use $sender_address
		
		
		# В случае обнаружения серьезных MIME ошибок
		#
		deny
			demime			= *
			condition		= ${if >{$demime_errorlevel}{2}{1}{0}}
			message			= Serious MIME defect detected ($demime_reason)

			logwrite		= Fucked spamers: DATA_ERROR $sender_host_address (${if def:sender_host_name {$sender_host_name}}) serious MIME defect detected ($demime_reason)


		# Если есть MIME контейнеры с "запрещенным" содержимым, то deny
		#
		deny
			demime			= bat:btm:cmd:com:cpl:dll:exe:lnk:msi:pif:prf:scr:vbs:url
			message			= We do not accept ".$found_extension" attachments here. 
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) we do not accept ".$found_extension" attachments here.


		

		
		# Все остальное accept
		# Т.к. сюда можно добраться в случае если отправляется письмо от релей-хоста или прошедшие аутентификацию и письно нормальное 
		#
		accept
			logwrite		= $sender_host_address (${if def:sender_host_name {$sender_host_name}}) WTF?





begin routers


	# Это для доставки сторонним smtp серверам
	#
	remote_smtp:
		driver						= manualroute
		domains						= !+local_domains
		transport					= remote_smtp
		route_list					= * upstream-smtp.domain.com
		no_more




begin transports


	# Delivering to remote SMPT
	#
	remote_smtp:
		driver						= smtp
		dns_qualify_single 			= false
		hosts_nopass_tls			= *
		port						= 25
		headers_remove				= "X-SA-Do-Not-Run:X-SA-Exim-Scanned:X-SA-Exim-Mail-From:X-SA-Exim-Rcpt-To:X-SA-Exim-Connect-IP"




begin retry

	# Address or Domain  Error   Retries
	# -----------------  -----   -------
	*                    *       F,2h,5m; G,16h,30m,1.5; F,4d,6h




begin rewrite




begin authenticators




# end exim conf
